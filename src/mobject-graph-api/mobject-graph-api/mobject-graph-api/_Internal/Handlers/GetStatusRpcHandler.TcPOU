<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="GetStatusRpcHandler" Id="{6cf829e0-ef19-0344-17c1-a06bbedd20d3}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK GetStatusRpcHandler IMPLEMENTS I_AsynchronousRpcHandler
VAR
	graphs : I_Graphs;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Handle" Id="{f45fcab5-6e0f-02f0-3a07-6672ae848d93}">
      <Declaration><![CDATA[METHOD Handle
VAR_INPUT
	Parameters : I_Deserializer;
	Response : I_AsynchronousRpcResponse;
END_VAR
VAR
	graphUuid : T_MAXSTRING;
	graph : I_Graph;
	feedback : DeserializerFeedback;
	serializer : I_Serializer;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Parameters.TryGetKeyString('graphUuid', graphUuid, feedback) THEN
	Response.RejectWithMessage(feedback.FirstError.Message);
	RETURN;
END_IF

IF NOT graphs.TryGetGraphByUuid(graphUuid,graph) THEN
	Response.RejectWithMessage(concat('Unknown UUID : ',graphUuid));
	RETURN;
END_IF

serializer := Response.GetSerializer();
graph.SerializeWith(serializer);
Response.CompleteWithObject(graph);
serializer.Dispose();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialize" Id="{d8e66366-921d-0278-3b53-5210f68488dc}">
      <Declaration><![CDATA[METHOD PUBLIC Initialize
VAR_INPUT
	Graphs : I_Graphs;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.graphs := Graphs;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>